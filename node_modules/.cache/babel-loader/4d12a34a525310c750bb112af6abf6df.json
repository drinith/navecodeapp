{"ast":null,"code":"var _jsxFileName = \"/Users/imac/Documents/projects/DevTech/navecodeapp/src/Context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// // import React, { createContext, useEffect, useState } from 'react'\n// // import axios from 'axios';//Axios é um cliente HTTP baseado em Promises para fazer requisições.\n// // import keys from './config/keys'\n// export const myContext = createContext({\n//     name:\"default\",\n//     cargo:'default'\n// });\n// //Buscar o usuário que está na API se existir e jogar no contexto\n// export const MyContextProvider = (props) => {\n//     const [userObject, setUserObject] = useState({\n//         name:\"default\",\n//         cargo:'default'\n//     });\n//     const [cargo, setCargo]=useState();\n//     // useEffect(() => {\n//     //     console.log(keys.serverApi)\n//     //     axios.get('http://'+keys.serverApi + \"/getuser\", { withCredentials: true }).then((res) => {\n//     //         console.log(res.data);\n//     //         if (res.data) {\n//     //             setUserObject(res.data);\n//     //         }\n//     //     })\n//     // }, [])\n//     return (\n//         <myContext.Provider value={{ ...userObject }}>{props.children}</myContext.Provider>\n//     )\n// }\n// export default myContext;\nconst GlobalContext = createContext({\n  name: \"default\",\n  cargo: 'default'\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [user, setUser] = useState < IUser | null > null;\n  const [userWallet, setWallet] = useState < IWallet | null > null;\n  const [loading, setLoading] = useState(false);\n  const [token, setToken] = useState(\"\");\n\n  async function signIn(data) {\n    const response = await auth.signIn(data);\n    setUser(response.user);\n    setToken(response.token);\n    await AsyncStorage.setItem(\"@gg:user\", JSON.stringify(response.user));\n    await AsyncStorage.setItem(\"@gg:token\", response.token);\n    await AsyncStorage.setItem(\"@gg:refresh_token\", response.refresh_token);\n  }\n\n  async function signOut() {\n    await AsyncStorage.clear();\n    setUser(null);\n  }\n\n  function formatMoney(n) {\n    const current = n.toFixed(2).replace(\".\", \",\");\n    return `R$ ${current}`;\n  }\n\n  useEffect(() => {\n    async function loadStorageData() {\n      const storagedUser = await AsyncStorage.getItem(\"@gg:user\");\n      const storagedToken = await AsyncStorage.getItem(\"@gg:token\");\n\n      if (storagedUser && storagedToken) {\n        setToken(storagedToken);\n        setUser(JSON.parse(storagedUser));\n      }\n    }\n\n    loadStorageData();\n  }, []);\n  useEffect(() => {\n    async function getMyWallet() {\n      if (user) {\n        const _userWallet = await getWallet();\n\n        setWallet(_userWallet);\n      }\n    }\n\n    getMyWallet();\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      signed: !!user,\n      token,\n      user,\n      wallet: userWallet,\n      loading,\n      signIn,\n      signOut,\n      formatMoney\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"qfUSuk9ZnaoAsI5DuYRQ0mxGZCY=\");\n\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider.\");\n  }\n\n  return context;\n}\n\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/imac/Documents/projects/DevTech/navecodeapp/src/Context.js"],"names":["GlobalContext","createContext","name","cargo","AuthProvider","children","user","setUser","useState","IUser","userWallet","setWallet","IWallet","loading","setLoading","token","setToken","signIn","data","response","auth","AsyncStorage","setItem","JSON","stringify","refresh_token","signOut","clear","formatMoney","n","current","toFixed","replace","useEffect","loadStorageData","storagedUser","getItem","storagedToken","parse","getMyWallet","_userWallet","getWallet","signed","wallet","useAuth","context","useContext","AuthContext","Error"],"mappings":"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","sourcesContent":["// // import React, { createContext, useEffect, useState } from 'react'\n// // import axios from 'axios';//Axios é um cliente HTTP baseado em Promises para fazer requisições.\n// // import keys from './config/keys'\n\n// export const myContext = createContext({\n//     name:\"default\",\n//     cargo:'default'\n// });\n\n// //Buscar o usuário que está na API se existir e jogar no contexto\n// export const MyContextProvider = (props) => {\n//     const [userObject, setUserObject] = useState({\n//         name:\"default\",\n//         cargo:'default'\n//     });\n\n//     const [cargo, setCargo]=useState();\n\n//     // useEffect(() => {\n//     //     console.log(keys.serverApi)\n//     //     axios.get('http://'+keys.serverApi + \"/getuser\", { withCredentials: true }).then((res) => {\n//     //         console.log(res.data);\n//     //         if (res.data) {\n//     //             setUserObject(res.data);\n//     //         }\n//     //     })\n//     // }, [])\n\n//     return (\n//         <myContext.Provider value={{ ...userObject }}>{props.children}</myContext.Provider>\n//     )\n// }\n\n// export default myContext;\n\n\n\nconst GlobalContext = createContext({\n    name:\"default\",\n    cargo:'default'\n});\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [user, setUser] = useState<IUser | null>(null);\n  const [userWallet, setWallet] = useState<IWallet | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [token, setToken] = useState(\"\");\n\n  async function signIn(data: any) {\n    const response: any = await auth.signIn(data);\n    setUser(response.user);\n\n    setToken(response.token);\n\n    await AsyncStorage.setItem(\"@gg:user\", JSON.stringify(response.user));\n    await AsyncStorage.setItem(\"@gg:token\", response.token);\n    await AsyncStorage.setItem(\"@gg:refresh_token\", response.refresh_token);\n  }\n\n  async function signOut() {\n    await AsyncStorage.clear();\n    setUser(null);\n  }\n\n  function formatMoney(n: number) {\n    const current = n.toFixed(2).replace(\".\", \",\");\n    return `R$ ${current}`;\n  }\n\n  useEffect(() => {\n    async function loadStorageData() {\n      const storagedUser = await AsyncStorage.getItem(\"@gg:user\");\n      const storagedToken = await AsyncStorage.getItem(\"@gg:token\");\n\n      if (storagedUser && storagedToken) {\n        setToken(storagedToken);\n        setUser(JSON.parse(storagedUser));\n      }\n    }\n\n    loadStorageData();\n  }, []);\n\n  useEffect(() => {\n    async function getMyWallet() {\n      if(user) {\n        const _userWallet: any = await getWallet();\n        setWallet(_userWallet );\n      }\n    }\n\n    getMyWallet();\n\n  }, [user]);\n\n  return (\n    <AuthContext.Provider\n      value={{ signed: !!user, token, user, wallet: userWallet, loading, signIn, signOut, formatMoney }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider.\");\n  }\n\n  return context;\n}\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}