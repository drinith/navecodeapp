{"ast":null,"code":"var _jsxFileName = \"/Users/imac/Documents/projects/DevTech/navecodeapp/src/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport axios from 'axios'; //Axios é um cliente HTTP baseado em Promises para fazer requisições.\n\nimport keys from './config/keys';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyContext = /*#__PURE__*/createContext({\n  name: \"default\",\n  cargo: 'default'\n}); //Buscar o usuário que está na API se existir e jogar no contexto\n\nconst Context = props => {\n  _s();\n\n  const [userObject, setUserObject] = useState({\n    name: \"default\",\n    cargo: 'default'\n  });\n  const [cargo, setCargo] = useState();\n  useEffect(() => {\n    console.log(keys.serverApi);\n    axios.get('http://' + keys.serverApi + \"/getuser\", {\n      withCredentials: true\n    }).then(res => {\n      console.log(res.data);\n\n      if (res.data) {\n        setUserObject(res.data);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      name: userObject.name,\n      cargo: userObject.cargo\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Context, \"zv4mGaHZUGE9WWFKnDILxPuqzsw=\");\n\n_c = Context;\nexport default Context;\n\nvar _c;\n\n$RefreshReg$(_c, \"Context\");","map":{"version":3,"sources":["/Users/imac/Documents/projects/DevTech/navecodeapp/src/Context.js"],"names":["React","createContext","useEffect","useState","axios","keys","MyContext","name","cargo","Context","props","userObject","setUserObject","setCargo","console","log","serverApi","get","withCredentials","then","res","data","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAA0B;;AAC1B,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,OAAO,MAAMC,SAAS,gBAAGL,aAAa,CAAC;AAACM,EAAAA,IAAI,EAAC,SAAN;AAAgBC,EAAAA,KAAK,EAAC;AAAtB,CAAD,CAA/B,C,CACP;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAC,SAAN;AAAgBC,IAAAA,KAAK,EAAC;AAAtB,GAAD,CAA5C;AACA,QAAM,CAACA,KAAD,EAAOK,QAAP,IAAiBV,QAAQ,EAA/B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACW,SAAjB;AACAZ,IAAAA,KAAK,CAACa,GAAN,CAAU,YAAUZ,IAAI,CAACW,SAAf,GAA2B,UAArC,EAAiD;AAAEE,MAAAA,eAAe,EAAE;AAAnB,KAAjD,EAA4EC,IAA5E,CAAkFC,GAAD,IAAS;AACtFN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,IAAhB;;AACA,UAAID,GAAG,CAACC,IAAR,EAAc;AACVT,QAAAA,aAAa,CAACQ,GAAG,CAACC,IAAL,CAAb;AACH;AACJ,KALD;AAMH,GARQ,EAQN,EARM,CAAT;AAUA,sBACI,QAAC,SAAD,CAAW,QAAX;AAAqB,IAAA,KAAK,EAAE;AAACd,MAAAA,IAAI,EAAEI,UAAU,CAACJ,IAAlB;AAAwBC,MAAAA,KAAK,EAAEG,UAAU,CAACH;AAA1C,KAA5B;AAAA,cAAgFE,KAAK,CAACY;AAAtF;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAjBD;;GAAMb,O;;KAAAA,O;AAkBN,eAAeA,OAAf","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\nimport axios from 'axios';//Axios é um cliente HTTP baseado em Promises para fazer requisições.\nimport keys from './config/keys'\n\nexport const MyContext = createContext({name:\"default\",cargo:'default'})\n//Buscar o usuário que está na API se existir e jogar no contexto\nconst Context = (props) => {\n    const [userObject, setUserObject] = useState({name:\"default\",cargo:'default'});\n    const [cargo,setCargo]=useState();\n\n    useEffect(() => {\n        console.log(keys.serverApi)\n        axios.get('http://'+keys.serverApi + \"/getuser\", { withCredentials: true }).then((res) => {\n            console.log(res.data);\n            if (res.data) {\n                setUserObject(res.data);\n            }\n        })\n    }, [])\n\n    return (\n        <MyContext.Provider  value={{name: userObject.name, cargo: userObject.cargo}} >{props.children}</MyContext.Provider>\n    )\n}\nexport default Context;\n\n"]},"metadata":{},"sourceType":"module"}