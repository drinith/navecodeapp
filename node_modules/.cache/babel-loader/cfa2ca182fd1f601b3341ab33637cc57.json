{"ast":null,"code":"var _jsxFileName = \"/Users/imac/Documents/projects/DevTech/navecodeapp/src/Context.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React, { createContext, useEffect, useState } from 'react'\n// import axios from 'axios';//Axios é um cliente HTTP baseado em Promises para fazer requisições.\n// import keys from './config/keys'\nexport const myContext = createContext({\n  name: \"default\",\n  cargo: 'default'\n}); //Buscar o usuário que está na API se existir e jogar no contexto\n\nconst MyContext = props => {\n  _s();\n\n  const [userObject, setUserObject] = useState({\n    name: \"default\",\n    cargo: 'default'\n  });\n  const [cargo, setCargo] = useState(); // useEffect(() => {\n  //     console.log(keys.serverApi)\n  //     axios.get('http://'+keys.serverApi + \"/getuser\", { withCredentials: true }).then((res) => {\n  //         console.log(res.data);\n  //         if (res.data) {\n  //             setUserObject(res.data);\n  //         }\n  //     })\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(myContext.Provider, {\n    value: { ...userObject\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyContext, \"5VYAz9luq1o9ybwle9l6UbmwIbg=\");\n\n_c = MyContext;\nexport default MyContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyContext\");","map":{"version":3,"sources":["/Users/imac/Documents/projects/DevTech/navecodeapp/src/Context.js"],"names":["myContext","createContext","name","cargo","MyContext","props","userObject","setUserObject","useState","setCargo","children"],"mappings":";;;;AAAA;AACA;AACA;AAEA,OAAO,MAAMA,SAAS,GAAGC,aAAa,CAAC;AACnCC,EAAAA,IAAI,EAAC,SAD8B;AAEnCC,EAAAA,KAAK,EAAC;AAF6B,CAAD,CAA/B,C,CAKP;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,QAAQ,CAAC;AACzCN,IAAAA,IAAI,EAAC,SADoC;AAEzCC,IAAAA,KAAK,EAAC;AAFmC,GAAD,CAA5C;AAKA,QAAM,CAACA,KAAD,EAAQM,QAAR,IAAkBD,QAAQ,EAAhC,CANyB,CAQzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI,QAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAE,EAAE,GAAGF;AAAL,KAA3B;AAAA,cAA+CD,KAAK,CAACK;AAArD;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CArBD;;GAAMN,S;;KAAAA,S;AAuBN,eAAeA,SAAf","sourcesContent":["// import React, { createContext, useEffect, useState } from 'react'\n// import axios from 'axios';//Axios é um cliente HTTP baseado em Promises para fazer requisições.\n// import keys from './config/keys'\n\nexport const myContext = createContext({\n    name:\"default\",\n    cargo:'default'\n});\n\n//Buscar o usuário que está na API se existir e jogar no contexto\nconst MyContext = (props) => {\n    const [userObject, setUserObject] = useState({\n        name:\"default\",\n        cargo:'default'\n    });\n\n    const [cargo, setCargo]=useState();\n\n    // useEffect(() => {\n    //     console.log(keys.serverApi)\n    //     axios.get('http://'+keys.serverApi + \"/getuser\", { withCredentials: true }).then((res) => {\n    //         console.log(res.data);\n    //         if (res.data) {\n    //             setUserObject(res.data);\n    //         }\n    //     })\n    // }, [])\n\n    return (\n        <myContext.Provider value={{ ...userObject }}>{props.children}</myContext.Provider>\n    )\n}\n\nexport default MyContext;\n\n"]},"metadata":{},"sourceType":"module"}